<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Godtmid</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://godtmid.github.io/"/>
  <updated>2020-06-30T13:33:08.549Z</updated>
  <id>https://godtmid.github.io/</id>
  
  <author>
    <name>天蓝蓝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何高效学习技术</title>
    <link href="https://godtmid.github.io/2020/06/28/%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A0%E6%8A%80%E6%9C%AF/"/>
    <id>https://godtmid.github.io/2020/06/28/%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A0%E6%8A%80%E6%9C%AF/</id>
    <published>2020-06-28T13:56:26.000Z</published>
    <updated>2020-06-30T13:33:08.549Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="输入密码，查看文章。" />    <label for="pass">输入密码，查看文章。</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这波啊
    
    </summary>
    
    
      <category term="学习要领" scheme="https://Godtmid.github.io/categories/%E5%AD%A6%E4%B9%A0%E8%A6%81%E9%A2%86/"/>
    
    
      <category term="学习要领" scheme="https://Godtmid.github.io/tags/%E5%AD%A6%E4%B9%A0%E8%A6%81%E9%A2%86/"/>
    
  </entry>
  
  <entry>
    <title>something</title>
    <link href="https://godtmid.github.io/2020/06/28/something/"/>
    <id>https://godtmid.github.io/2020/06/28/something/</id>
    <published>2020-06-28T12:30:47.000Z</published>
    <updated>2020-06-28T12:38:32.462Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="输入密码，查看文章。" />    <label for="pass">输入密码，查看文章。</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这个你只有GODTMID能看
    
    </summary>
    
    
      <category term="杂项" scheme="https://Godtmid.github.io/categories/%E6%9D%82%E9%A1%B9/"/>
    
    
      <category term="杂项" scheme="https://Godtmid.github.io/tags/%E6%9D%82%E9%A1%B9/"/>
    
  </entry>
  
  <entry>
    <title>linux shell</title>
    <link href="https://godtmid.github.io/2020/06/26/linux-shell/"/>
    <id>https://godtmid.github.io/2020/06/26/linux-shell/</id>
    <published>2020-06-26T12:55:37.000Z</published>
    <updated>2020-06-26T16:14:56.501Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="知识小点"><a href="#知识小点" class="headerlink" title="知识小点"></a>知识小点</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$&#123;#变量&#125;获取变量长度</span><br><span class="line">$&#123;#变量:1:4&#125;提取字符串</span><br><span class="line"> &#96;expr index $&#123;yw&#125; d&#96;查找d在字符串yw中的下标</span><br><span class="line">数组名&#x3D;(值1 值1 值1)数组值加空格，长度不限制 </span><br><span class="line">$&#123;数组名&#125;默认输出第一个元素</span><br><span class="line">$(数组名[@])$(数组名[*])输出全部元素</span><br><span class="line">find . -name &quot;*.sh&quot; | xargs grep &quot;p2&quot;查找当前目录下所有包含&quot;p2&quot;关键字的sh后缀文件</span><br><span class="line">echo m2 m3 m4 |xargs -n 1 cp -v p1.sh批量复制一个文件到多个文件夹</span><br><span class="line">-n 1 - 告诉 xargs 命令每个命令行最多使用一个参数，并发送到 cp 命令中。</span><br><span class="line">cp – 用于复制文件。</span><br><span class="line">-v – 启用详细模式来显示更多复制细节。</span><br><span class="line">((i&lt;5))用双括号可以直接写表达式，不用管linux的运算符</span><br><span class="line">&quot;sh -c &quot; 命令，它可以让 bash 将一个字串作为完整的命令来执行，这样就可以将 sudo 的影响范围扩展到整条命令。具体用法如下：</span><br><span class="line">$ sudo sh -c &#39;echo &quot;又一行信息&quot; &gt;&gt; test.asc&#39;</span><br><span class="line">dirname $0 获取当前脚本目录</span><br></pre></td></tr></table></figure><a id="more"></a><p>命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">awk知识点：</span><br><span class="line">awk &#39;&#123;match($1,&#x2F;[0-9]+&#x2F;,a)&#125;&#123;print($2 , a[0])&#125;&#39;获取匹配的第一，第二列，并将第一列正则匹配传到数组，打印出来</span><br><span class="line">awk &#39;&#123;FS&#x3D;&quot;s&#x3D;&quot;&#125;&#123;print($1)&#125;&#39;获取以字符串&quot;s&#x3D;&quot;分割后的第一列</span><br><span class="line">rz和sz：中小文件上传下载命令：</span><br><span class="line">rz：文件上传，通常使用命令</span><br><span class="line">rz -be#option说明，b：二进制，e：跳过文件中的控制字符</span><br><span class="line"></span><br><span class="line">sz：文件下载，通常使用命令</span><br><span class="line">sz wujn.txt wujn  #多文件下载</span><br></pre></td></tr></table></figure><h2 id="linux-shell的多样性"><a href="#linux-shell的多样性" class="headerlink" title="linux shell的多样性"></a>linux shell的多样性</h2><p>Bourne shell：最初的shell，即sh。处理与用户的交互方面差<br>Bourne Again shell：Bourne shell的扩展，即bash,在sh的基础上添加了许多新特性，提供如命令补全、命令编辑和命令历史表等功能，有灵活和强大的编程接口，同时又有很友好的用户界面<br>注：若脚本第一行为“#!/bin/bash”，使用sh调用脚本则即调用bash去解释脚本（Ubuntu除外）<br>Dash：由于bash太复杂，为了获得更快的脚本执行速度，Dash应运而生。<br>注：    若脚本第一行为 “#!/bin/sh”，我们使用命令：”sh script_name.sh“时是调用的 dash 解释脚本<br>Ubuntu默认sh链接dash,<br>root@ubuntu:/myshell# ls -l /bin/sh /bin/bash<br>-rwxr-xr-x 1 root root 1037528 Jul 13 03:26 /bin/bash<br>lrwxrwxrwx 1 root root       4 Aug 31 20:12 /bin/sh -&gt; dash</p><p>由于在 bash 下可以正常运行的一些 sh 在 dash 下不能使用，造成了一些麻烦。<br>故重新配置dash：<br>sudo dpkg-reconfigure dash #选择 “no”，即不使用 dash</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;知识小点&quot;&gt;&lt;a href=&quot;#知识小点&quot; class=&quot;headerlink&quot; title=&quot;知识小点&quot;&gt;&lt;/a&gt;知识小点&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$&amp;#123;#变量&amp;#125;		获取变量长度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&amp;#123;#变量:1:4&amp;#125;		提取字符串&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#96;expr index $&amp;#123;yw&amp;#125; d&amp;#96;	查找d在字符串yw中的下标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;数组名&amp;#x3D;(值1 值1 值1)	数组值加空格，长度不限制 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$&amp;#123;数组名&amp;#125;				默认输出第一个元素&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$(数组名[@])	$(数组名[*])		输出全部元素&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;find . -name &amp;quot;*.sh&amp;quot; | xargs grep &amp;quot;p2&amp;quot;	查找当前目录下所有包含&amp;quot;p2&amp;quot;关键字的sh后缀文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo m2 m3 m4 |xargs -n 1 cp -v p1.sh		批量复制一个文件到多个文件夹&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-n 1 - 告诉 xargs 命令每个命令行最多使用一个参数，并发送到 cp 命令中。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cp – 用于复制文件。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-v – 启用详细模式来显示更多复制细节。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;((i&amp;lt;5))			用双括号可以直接写表达式，不用管linux的运算符&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;sh -c &amp;quot; 命令，它可以让 bash 将一个字串作为完整的命令来执行，这样就可以将 sudo 的影响范围扩展到整条命令。具体用法如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo sh -c &amp;#39;echo &amp;quot;又一行信息&amp;quot; &amp;gt;&amp;gt; test.asc&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dirname $0 获取当前脚本目录&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://Godtmid.github.io/categories/Linux/"/>
    
    
      <category term="shell" scheme="https://Godtmid.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>springboot注解</title>
    <link href="https://godtmid.github.io/2020/06/20/springboot/"/>
    <id>https://godtmid.github.io/2020/06/20/springboot/</id>
    <published>2020-06-20T06:20:17.000Z</published>
    <updated>2020-06-27T02:46:39.056Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Springboot注解笔记"><a href="#Springboot注解笔记" class="headerlink" title="Springboot注解笔记"></a><strong>Springboot注解笔记</strong></h1><h2 id="springboot常用注解"><a href="#springboot常用注解" class="headerlink" title="springboot常用注解"></a><strong>springboot常用注解</strong></h2><p><strong>@Primary或@Qualifier</strong></p><p><strong>问题：</strong></p><p>当一个接口有 2 个不同实现时，使用 @Autowired 注解时会报 org.springframework.beans.factory.NoUniqueBeanDefinitionException 异常信息</p><p><strong>解释与应用：</strong></p><p>@Qualifier:使用 Qualifier 注解，选择一个对象的名称，通常比较常用</p><p>@Primary:Primary 可以理解为默认优先选择，同时不可以同时设置多个，内部实质是设置 BeanDefinition 的 primary 属性</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">@Component(&quot;metalSinger&quot;) &#x2F;&#x2F; 加注解，让spring识别</span><br><span class="line">public class MetalSinger implements Singer&#123;</span><br><span class="line">    @Override</span><br><span class="line">    public String sing(String lyrics) &#123;</span><br><span class="line">        return &quot;I am singing with DIO voice: &quot;+lyrics;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@Primary</span><br><span class="line">@Component(&quot;operaSinger&quot;)</span><br><span class="line">public class OperaSinger implements Singer &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public String sing(String lyrics) &#123;</span><br><span class="line">        return &quot;I am singing in Bocelli voice: &quot;+lyrics;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">public interface Singer &#123;</span><br><span class="line">    String sing(String lyrics);</span><br><span class="line">&#125;</span><br><span class="line">@Component</span><br><span class="line">public class SingerService &#123;</span><br><span class="line">    private static final Logger logger &#x3D; LoggerFactory.getLogger(SingerService.class);</span><br><span class="line">    @Autowired</span><br><span class="line">    @Qualifier</span><br><span class="line">    private Singer singer;</span><br><span class="line">    public String sing()&#123;</span><br><span class="line">        return singer.sing(&quot;song lyrics&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">        ApplicationContext context &#x3D; new AnnotationConfigApplicationContext(&quot;context.annotation.primary&quot;);</span><br><span class="line">        SingerService singerService &#x3D; context.getBean(SingerService.class);</span><br><span class="line">        System.out.println(singerService.sing());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>@Import</strong>：用来导入其他配置类。 </p><p><strong>@ImportResource</strong>：用来加载xml配置文件。 </p><p><strong>@Autowired</strong>：自动导入依赖的bean </p><p><strong>@Service</strong>：一般用于修饰service层的组件 </p><p><strong>@Repository</strong>：使用@Repository注解可以确保DAO或者repositories提供异常转译， 这个注解修饰的DAO或者repositories类会被ComponetScan发现并配置，同时也不需要为它们提供XML配置项。 </p><p><strong>@Bean</strong>：用@Bean标注方法等价于XML中配置的bean。 </p><p><strong>@Value</strong>：注入Spring boot application.properties配置的属性的值。示例代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@Value(value &#x3D; “#&#123;message&#125;”)</span><br><span class="line">private String message;</span><br></pre></td></tr></table></figure><h2 id="全局异常处理"><a href="#全局异常处理" class="headerlink" title="全局异常处理"></a><strong>全局异常处理</strong></h2><p><strong>@ControllerAdvice、@RestControllerAdvice</strong>：包含@Component。可以被扫描到。统一处理异常。 实现    <em>ResponseBodyAdvice&lt;Object&gt;</em>接口实现统一分装返回。 </p><p><strong>@ExceptionHandler（Exception.class）</strong>：用在方法上面表示遇到这个异常就执行以下方法。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Springboot注解笔记&quot;&gt;&lt;a href=&quot;#Springboot注解笔记&quot; class=&quot;headerlink&quot; title=&quot;Springboot注解笔记&quot;&gt;&lt;/a&gt;&lt;strong&gt;Springboot注解笔记&lt;/strong&gt;&lt;/h1&gt;&lt;h2 id=&quot;springboot常用注解&quot;&gt;&lt;a href=&quot;#springboot常用注解&quot; class=&quot;headerlink&quot; title=&quot;springboot常用注解&quot;&gt;&lt;/a&gt;&lt;strong&gt;springboot常用注解&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;@Primary或@Qualifier&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问题：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当一个接口有 2 个不同实现时，使用 @Autowired 注解时会报 org.springframework.beans.factory.NoUniqueBeanDefinitionException 异常信息&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解释与应用：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;@Qualifier:使用 Qualifier 注解，选择一个对象的名称，通常比较常用&lt;/p&gt;
&lt;p&gt;@Primary:Primary 可以理解为默认优先选择，同时不可以同时设置多个，内部实质是设置 BeanDefinition 的 primary 属性&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://Godtmid.github.io/categories/Java/"/>
    
      <category term="springboot" scheme="https://Godtmid.github.io/categories/Java/springboot/"/>
    
    
      <category term="springboot注解" scheme="https://Godtmid.github.io/tags/springboot%E6%B3%A8%E8%A7%A3/"/>
    
  </entry>
  
</feed>
