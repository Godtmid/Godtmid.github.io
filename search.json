[{"title":"springboot注解","url":"/2020/06/20/springboot/","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"Springboot注解笔记\"><a href=\"#Springboot注解笔记\" class=\"headerlink\" title=\"Springboot注解笔记\"></a><strong>Springboot注解笔记</strong></h1><h2 id=\"springboot常用注解\"><a href=\"#springboot常用注解\" class=\"headerlink\" title=\"springboot常用注解\"></a><strong>springboot常用注解</strong></h2><p><strong>@Primary或@Qualifier</strong></p>\n<p><strong>问题：</strong></p>\n<p>当一个接口有 2 个不同实现时，使用 @Autowired 注解时会报 org.springframework.beans.factory.NoUniqueBeanDefinitionException 异常信息</p>\n<p><strong>解释与应用：</strong></p>\n<p>@Qualifier:使用 Qualifier 注解，选择一个对象的名称，通常比较常用</p>\n<p>@Primary:Primary 可以理解为默认优先选择，同时不可以同时设置多个，内部实质是设置 BeanDefinition 的 primary 属性</p>\n<a id=\"more\"></a>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">@Component(&quot;metalSinger&quot;) &#x2F;&#x2F; 加注解，让spring识别</span><br><span class=\"line\">public class MetalSinger implements Singer&#123;</span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public String sing(String lyrics) &#123;</span><br><span class=\"line\">        return &quot;I am singing with DIO voice: &quot;+lyrics;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@Primary</span><br><span class=\"line\">@Component(&quot;operaSinger&quot;)</span><br><span class=\"line\">public class OperaSinger implements Singer &#123;</span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public String sing(String lyrics) &#123;</span><br><span class=\"line\">        return &quot;I am singing in Bocelli voice: &quot;+lyrics;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">public interface Singer &#123;</span><br><span class=\"line\">    String sing(String lyrics);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@Component</span><br><span class=\"line\">public class SingerService &#123;</span><br><span class=\"line\">    private static final Logger logger &#x3D; LoggerFactory.getLogger(SingerService.class);</span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    @Qualifier</span><br><span class=\"line\">    private Singer singer;</span><br><span class=\"line\">    public String sing()&#123;</span><br><span class=\"line\">        return singer.sing(&quot;song lyrics&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">public static void main(String[] args) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        ApplicationContext context &#x3D; new AnnotationConfigApplicationContext(&quot;context.annotation.primary&quot;);</span><br><span class=\"line\">        SingerService singerService &#x3D; context.getBean(SingerService.class);</span><br><span class=\"line\">        System.out.println(singerService.sing());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>@Import</strong>：用来导入其他配置类。 </p>\n<p><strong>@ImportResource</strong>：用来加载xml配置文件。 </p>\n<p><strong>@Autowired</strong>：自动导入依赖的bean </p>\n<p><strong>@Service</strong>：一般用于修饰service层的组件 </p>\n<p><strong>@Repository</strong>：使用@Repository注解可以确保DAO或者repositories提供异常转译， 这个注解修饰的DAO或者repositories类会被ComponetScan发现并配置，同时也不需要为它们提供XML配置项。 </p>\n<p><strong>@Bean</strong>：用@Bean标注方法等价于XML中配置的bean。 </p>\n<p><strong>@Value</strong>：注入Spring boot application.properties配置的属性的值。示例代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">@Value(value &#x3D; “#&#123;message&#125;”)</span><br><span class=\"line\">private String message;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"全局异常处理\"><a href=\"#全局异常处理\" class=\"headerlink\" title=\"全局异常处理\"></a><strong>全局异常处理</strong></h2><p><strong>@ControllerAdvice、@RestControllerAdvice</strong>：包含@Component。可以被扫描到。统一处理异常。 实现    <em>ResponseBodyAdvice&lt;Object&gt;</em>接口实现统一分装返回。 </p>\n<p><strong>@ExceptionHandler（Exception.class）</strong>：用在方法上面表示遇到这个异常就执行以下方法。</p>\n","categories":["Java","springboot"],"tags":["springboot注解"]},{"title":"如何高效学习技术","url":"/2020/06/28/%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A0%E6%8A%80%E6%9C%AF/","content":"<div id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" id=\"hbePass\" placeholder=\"\" />\n    <label for=\"hbePass\">输入密码，查看文章。</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"7e0b414f4baec67924f06ce32c295ed2eec8dac2b6ee54df6752e1a98746e37f\">0eb6177066e09f40753f9c501971e0cee50e674cefbb949f7c58fa7f3bafe5854a7ca9a8daff65242e55d5ed74439a9aa88e0474b86d515dc080351eceaf6d26e883aa8b7e6933997809f9cb5051e4e464763a49afef5ad2134ca149e5084bafd21ab0311e35f9117c6117cc01fe5d5dfbcd5caf71b267430d686bbc7556e2d1d2c61822ef44a1888fbb61169cd44631e38816a98b4942df02a3013a3a6e08aa7695f4d5d9e02ec0eea4922ce84fa37f2afd393bbb5695cf34fb3c93f5d7416fe2897460b1d00427c62b65775293526341d1443565c477f4e20c5d9735a08b70166ecdfedcefd9aaa4273ea39eb782102a6f9dcda00571422c7baf68d09a823bcf9a04bd7f7ff5c3f8dbeb1443f197afe1917ba9bcde4f5bfd076de6791212ae6d725f2bdda9e98ddfa9d17931f25db8dea5d87eb8bd856e8d3f8314c257c5bc5e76de864da79dc9c5a088b69cc3553289b4c9b82b56e8664145b961e6ff26388a05fa39b59f712d8d4223831971c5767d76ea1c3a8da69379290d56938c295048b07f24747e4006064027c4a6e004a8c7f464161cfdef0d2b3d7ce073046fc9042527476081019c63ac6247ec74c4ab2f4cd1b5bbb9115718fc991a0dbc620b8355e88c076a41ee08aa3679ca065027552134586e11b60e79eaacdfd016b693935c3b8a0ae762adcb2bc16a8ea9d3292969eccaecb2010994fdc5f0d93a86df55332b7c02d8f1784048bc961f79e88f3234376c5238cad8ac5258b9054dca2c5bb84d7968d7aa8c3e4ac21c6cb92c0d17d4ba48580ce65869f21752f4605304d5aef7136590649b43afba83f4df8389b108a90c0ecca3217d469a898ef7d1e4a93160ccea3a728444e0ed17b1464cb2618ec0a30bfbd1c4bc1c57a7b10c9980274942a32cfdb4cb22aadede50e63efea2eae40090d19a394f9d66169e9766600494a6f0b149b0d6ef0cf0d5d457004f423ccb47aa2fe70a2318e3406a695c297b88534460755229ef70e45b22c5dc4515c357ccbdf43a00fdc2e445acdac41b3b5b6eddf3940ad4996d1f3b207a14f5ae5a450070742079d2e20f0c1aa6d8dd9e5dcaa0b0451c5a536335868967436bfb4ad7a88d7de2616c62fad26beae4f54936f4dd98dda38f38635edab6adf447a24c01bc5bf306b98edfa673bbcd238946725ac946b8add0746b24c0d679e9f18a35d6d4eb894171373c57079236e5fcccd5aa894c01d607593179e70e8dbc1b08dd4e240eee3428be1aaa69f1372bf66eef47eb1864ecade6059db2346daefbefa1289fb905285c09cd9b2295325ead4450e184a5f74c94e8122cc293fc93fbc607cb87059d5726dc1d617a34845dc3227512116990c692e1b3ac8eeff7e584d42ea5db7105e2942740383de865f23d63fe6b7dc08c2318d086d9b1bfaf1a281b700f8938ff1b82a9a94d471989e1b4f9a6101185f5a3ec0c04b0c4de83b9d15ca68cb03a45a566fb576db179dbf4d64f50a7d33bf4aa867136a9d9bea079c998e870ea9002ccc07f8ba10a824bfecd75797b14dc066e6e57c1c1039d0eac46a152ad2131714a53d320548a5d25a8028b34381bf308e83ce28dd86b2471be3a3ed9e6004bb665eafc071c7123860697f22ad8c78989ef0cf0da3c0db1e738168f714cd539c3b67a33fefdd12e872027dccfa66241b119ecb6d72492ec1b5a50a2d87adf6bdaac0b07a1c2092ea95b8ecec2e69ed479e7205b7c0cadaed187445e36808a8d72257ff46329053f71de200645aece10867fa077eefb62bd5e87be47c700adc02b1aa96f981a411ff92a6064e563b53ad50b45fbba438387421957d9e0c23a1261d575e52e9ea0957ddbaf649ed353ec13782aabf1af8188bff087bbd4af89cda3e023527a3df6b3da7a3cb9f597886fb2adec2aedc98171a8bd7cd08b57641fe27a3e4536b1f6b0c6d5f088c645f17fba374a116d54f331aefb1fa013410d09f7c20481fc8d02a3824512320adfb7fe4e5d9f29311eabc3362d92ecfede18917de4e6639fb6031dceed1618554f8c1cbd5804b246e37b837a3f014a9630daa349572412a10e0558d121587a9908acaff6fcf51a9221fe353423d595545f6be72b9cf3d58f10939c284a44e734aaa035115f819003253f59bb91898151ab1f6a922a52b75a932ae422a6fca64213d4a1f4941bc04d208bd2d976bc3959eec7b7e341aa8e184889d8eff82c80f80b0f73435572d50ba56e76188bcbeaee26d9f26d98208fa995cc2e27788a606cf059d0bc7603c0e675db0b2d5afd90c8aefb36d36360f260720ca696a6fed2e8cf38ef57201336fc38009cd25b79ecef03413c11bb7f78dc0808de76d7caf01df68fdbac8c9298377a83240bf6a4ba381b09ff98316f11894116208e56da404196ad3fa279e4a4f15192266fa6e3e4369c8e948ba1fce5efcabdeb63c8118bb1d2ee563515ecf51c6254232a016c4367f12d93fb3cc5629ecec30bb306b597a157da87a615f74268f9d921ef82331bf918471dbbe99431446cec0f6cd1118a9da4bf9e085f55f2a472e5da9af3c15eba29549f03c7f4841e9cdee8a6931fc3ec7447cc57349e171756d395b3d290706b9de4fefac2dc383b263ae4f79cbea5ce761a9a069079eb53424f0151a02a6e257baf4de7de4669539de5d699a9e031f72888543b3a6619bbbbca05d07d458825f2ad54bdf2f374a1cf35e96e5a871c6a00b0e52d93d3de01db11acac498540e58790ff6598254edd97dd782b101fc38f4b097843b175435ae821610ae090ff36abf80f932f4bae9f3b7c1991acd05dae1e5e28250dd08806cb83e13b4993d243e03289a7d20b16ab360a0295a081d648b5985333349218d7660ec96f88e20ac0546e2f5418bceb820e212c18243c1defb49dc50066f39b8de43185bc2a044804b5e47ca2ab64747f7e6f10bb55741e999dca1b2fb9ebbdcdc482c1404ff39e815f27825c4b7b5a100ac986c71accb8fb1e10b9ada3dc69ecbc9b16d8ab11a56845da9b24749c3e427cc9e302566834859ed509e52c70dfff4639b6c4fe4c96edd4a5a50936206db611e3d57c86286e0419937fe8c05b614e1f47fa92124637279da1b0098897de9ecdc592aa635ad88f213cdb5e9d1d4837f188433b9e8ea01d649352b4799cd79b7e26f785c6e0ee294da52b9843f48da9cf167fb38f096a135d79c6133f4ad5e20d9e074382e1d27d0b1843b9a5e68039dbdcab9b8614e42bb0abb020b983ee9794e2753f402db9e4c4922661e7ae7cc7b6ed6c0ffa1ab50cb70a62997507e86814e9c90d0c79c27173c5472eceb6384754e0b4d8a8bf6be02b97288b963b1061f35ac6b2435131e23182b48603fbf4c97fc5ddaf23f1bc9ed29105deb70ba0fcbd70a941286ec26a86fc33cff56900565d7bc3e26dfbe0ca12db60ab6937c087e4e18008e90e1b967144c4dffacbb84e329e8e7b2f24d18dd5caad319df62646095a34ce98df86754bdc4acb7286632ddeb091c12672c91e41baf5a1437df21d26daffd9eb2ab98467105a821fce8a2a704b4f1fd94427208e895f70422821aee12d40b7664a7326bc94f639db3cd9002b0d90f107096a2aa39b852c909e2366359c44e0cb5ab04288a3db4d73f7b5a0589b6bc462ef8a2691be64f6cd16b4e0e1339bf33a6174bcd172b4492f00c1256feb22c011c6a49775c1b7410fb43c76a66fe29c6c8b</script>\n</div>\n<script src=\"/lib/blog-encrypt.js\"></script><link href=\"/css/blog-encrypt.css\" rel=\"stylesheet\" type=\"text/css\">","categories":["学习要领"],"tags":["学习要领"]},{"title":"something","url":"/2020/06/28/something/","content":"<div id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" id=\"hbePass\" placeholder=\"\" />\n    <label for=\"hbePass\">输入密码，查看文章。</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"5a418c0c08b8324ab4a127c9495511cdee99c282a7af882aafb148ce75340f4b\">0eb6177066e09f40753f9c501971e0cee50e674cefbb949f7c58fa7f3bafe5854a7ca9a8daff65242e55d5ed74439a9aa88e0474b86d515dc080351eceaf6d26e883aa8b7e6933997809f9cb5051e4e464763a49afef5ad2134ca149e5084bafd21ab0311e35f9117c6117cc01fe5d5dfbcd5caf71b267430d686bbc7556e2d1d2c61822ef44a1888fbb61169cd44631e38816a98b4942df02a3013a3a6e08aa7695f4d5d9e02ec0eea4922ce84fa37f2afd393bbb5695cf34fb3c93f5d7416fe2897460b1d00427c62b65775293526341d1443565c477f4e20c5d9735a08b70166ecdfedcefd9aaa4273ea39eb782102a6f9dcda00571422c7baf68d09a823bcf9a04bd7f7ff5c3f8dbeb1443f197af065d30d346f513629c585bf4b57738f316211fa41cca9d164debd04139403c7cf7b50116118acef7f1a28c559da4f9d1da004cdb7cfce3086dfe8bb8ba1e4b038da30c5c5411b9cc9bae22a0c3801ad32d33824d35c0e1d835e77d92b7adadee1360f77cf08c2a44032a2fbc2332b0dc4129917ed9d7dd9af4d8ef4f28352364760280134d81dad48a4887819ed589abc94ec4770ec711399c48869dbc475746a88f2f7f2da491f6588e477b0f74f5cc1454d3eb71e0bde45d45ae6d6a69ea64e2e3e335426ceacc072b10679eff607025de7eb959c6b9748054767a121c8c7c776a73ed68eb98754bfac331153c031f80d0baf33749beef60fb6ac2a85d26a130c9c8a87f462676e0454eda6e5c2aed7cbaf599c89742692f55a6392f4cde8f6d5ab8b4381dea3691fe06e6a4ffe13d6a9f1603a7e8a8e6f4c1922a7e4e74c7ab7bf49375cfbd92851b958fff98506a0cd33bde15336c125cefa9fc618e722efe83cab9e9bcdc5a4ad48bdddaf7205133729ae9b6461eaec6405333bcf7ed23f89abc4b7fc38233f7325caf49682888665d33fb6c45944490d5ce77de82ca0fa2defe5fd132760dae3a94ba4ecd89004b3374737c965a420d31deae04e6a2663b3a59e1a24049e97e0a5c827089cad4fedc233f5ee9cf05f296a804d64ef5d0a5e747d91fb6e5e21acf225141d2754ee786fefed250520dd2b8a33e7845d3966557aa4057685c9733cbbc49a2f9425d3b60460a862c653faf903d1e858570aaf688b7a61e2b0b275e4f75c41c9a289f39a6e2f0c862021562cb12ed94aeff5d8cbdfe5f165152b5860be7946f594fe0c62e211c0bcc7dbe9acc78df2f5c91724ff4d78ba29bef0f6ec3cb2342b5e3053aefef7d2422a0c8df745f1f85124254609621ffdf0e7865ed7cf781d0aab9d708358be847fd330c514a373e6798a8ebd46721ef89c6afd85ca05e97702b01e5a31165ece1988a3545d221bd9e77961597d4b58ca3d36f5a5792c3d84d700d371c8865d7f318b087a4e768b7907853e8d25fad805dc82f517bad4eb21b3235d01ebe4ea41e27fbaf22b53a75db3b585db359aee4a616c79b7b6035288d270080</script>\n</div>\n<script src=\"/lib/blog-encrypt.js\"></script><link href=\"/css/blog-encrypt.css\" rel=\"stylesheet\" type=\"text/css\">","categories":["杂项"],"tags":["杂项"]},{"title":"linux shell","url":"/2020/06/26/linux-shell/","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1 id=\"知识小点\"><a href=\"#知识小点\" class=\"headerlink\" title=\"知识小点\"></a>知识小点</h1><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$&#123;#变量&#125;\t\t获取变量长度</span><br><span class=\"line\">$&#123;#变量:1:4&#125;\t\t提取字符串</span><br><span class=\"line\"> &#96;expr index $&#123;yw&#125; d&#96;\t查找d在字符串yw中的下标</span><br><span class=\"line\">数组名&#x3D;(值1 值1 值1)\t数组值加空格，长度不限制 </span><br><span class=\"line\">$&#123;数组名&#125;\t\t\t\t默认输出第一个元素</span><br><span class=\"line\">$(数组名[@])\t$(数组名[*])\t\t输出全部元素</span><br><span class=\"line\">find . -name &quot;*.sh&quot; | xargs grep &quot;p2&quot;\t查找当前目录下所有包含&quot;p2&quot;关键字的sh后缀文件</span><br><span class=\"line\">echo m2 m3 m4 |xargs -n 1 cp -v p1.sh\t\t批量复制一个文件到多个文件夹</span><br><span class=\"line\">-n 1 - 告诉 xargs 命令每个命令行最多使用一个参数，并发送到 cp 命令中。</span><br><span class=\"line\">cp – 用于复制文件。</span><br><span class=\"line\">-v – 启用详细模式来显示更多复制细节。</span><br><span class=\"line\">((i&lt;5))\t\t\t用双括号可以直接写表达式，不用管linux的运算符</span><br><span class=\"line\">&quot;sh -c &quot; 命令，它可以让 bash 将一个字串作为完整的命令来执行，这样就可以将 sudo 的影响范围扩展到整条命令。具体用法如下：</span><br><span class=\"line\">$ sudo sh -c &#39;echo &quot;又一行信息&quot; &gt;&gt; test.asc&#39;</span><br><span class=\"line\">dirname $0 获取当前脚本目录</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">awk知识点：</span><br><span class=\"line\">awk &#39;&#123;match($1,&#x2F;[0-9]+&#x2F;,a)&#125;&#123;print($2 , a[0])&#125;&#39;\t\t获取匹配的第一，第二列，并将第一列正则匹配传到数组，打印出来</span><br><span class=\"line\">awk &#39;&#123;FS&#x3D;&quot;s&#x3D;&quot;&#125;&#123;print($1)&#125;&#39;\t\t\t\t\t\t获取以字符串&quot;s&#x3D;&quot;分割后的第一列</span><br><span class=\"line\">rz和sz：中小文件上传下载命令：</span><br><span class=\"line\">rz：文件上传，通常使用命令</span><br><span class=\"line\">rz -be\t#option说明，b：二进制，e：跳过文件中的控制字符</span><br><span class=\"line\"></span><br><span class=\"line\">sz：文件下载，通常使用命令</span><br><span class=\"line\">sz wujn.txt wujn  #多文件下载</span><br></pre></td></tr></table></figure>\n<h2 id=\"linux-shell的多样性\"><a href=\"#linux-shell的多样性\" class=\"headerlink\" title=\"linux shell的多样性\"></a>linux shell的多样性</h2><p>Bourne shell：最初的shell，即sh。处理与用户的交互方面差<br>Bourne Again shell：Bourne shell的扩展，即bash,在sh的基础上添加了许多新特性，提供如命令补全、命令编辑和命令历史表等功能，有灵活和强大的编程接口，同时又有很友好的用户界面<br>注：若脚本第一行为“#!/bin/bash”，使用sh调用脚本则即调用bash去解释脚本（Ubuntu除外）<br>Dash：由于bash太复杂，为了获得更快的脚本执行速度，Dash应运而生。<br>注：    若脚本第一行为 “#!/bin/sh”，我们使用命令：”sh script_name.sh“时是调用的 dash 解释脚本<br>Ubuntu默认sh链接dash,<br>root@ubuntu:/myshell# ls -l /bin/sh /bin/bash<br>-rwxr-xr-x 1 root root 1037528 Jul 13 03:26 /bin/bash<br>lrwxrwxrwx 1 root root       4 Aug 31 20:12 /bin/sh -&gt; dash</p>\n<p>由于在 bash 下可以正常运行的一些 sh 在 dash 下不能使用，造成了一些麻烦。<br>故重新配置dash：<br>sudo dpkg-reconfigure dash #选择 “no”，即不使用 dash</p>\n","categories":["Linux"],"tags":["shell"]}]